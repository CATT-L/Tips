import{_ as n,o as s,c as a,e as t}from"./app.e4e1650e.js";const p={},o=t(`<h1 id="model-dao-\u6570\u636E\u8BBF\u95EE\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#model-dao-\u6570\u636E\u8BBF\u95EE\u5BF9\u8C61" aria-hidden="true">#</a> Model-Dao \u6570\u636E\u8BBF\u95EE\u5BF9\u8C61</h1><h2 id="\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> \u57FA\u672C\u6982\u5FF5</h2><p>\u8FD9\u91CC\u7F16\u5199\u6570\u636E\u5E93\u8BFB\u5199\u76F8\u5173\u7684\u4EE3\u7801\u3002</p><h2 id="\u76EE\u5F55\u89C4\u8303" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55\u89C4\u8303" aria-hidden="true">#</a> \u76EE\u5F55\u89C4\u8303</h2><p>\u53C2\u8003Controller\u63A7\u5236\u5668\u3002</p><h2 id="\u8D70\u8FC7\u7684\u5F2F\u8DEF\u548C\u6452\u5F03\u7684\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u8D70\u8FC7\u7684\u5F2F\u8DEF\u548C\u6452\u5F03\u7684\u65B9\u6848" aria-hidden="true">#</a> \u8D70\u8FC7\u7684\u5F2F\u8DEF\u548C\u6452\u5F03\u7684\u65B9\u6848</h2><h3 id="\u3010\u5F2F\u8DEF-\u6452\u5F03\u3011\u901A\u7528\u7684\u5217\u8868-\u6570\u91CF\u67E5\u8BE2\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u3010\u5F2F\u8DEF-\u6452\u5F03\u3011\u901A\u7528\u7684\u5217\u8868-\u6570\u91CF\u67E5\u8BE2\u51FD\u6570" aria-hidden="true">#</a> \u3010\u5F2F\u8DEF/\u6452\u5F03\u3011\u901A\u7528\u7684\u5217\u8868/\u6570\u91CF\u67E5\u8BE2\u51FD\u6570</h3><p>\u8BF7\u770B\u4E0B\u65B9\u4EE3\u7801\u7247\u6BB5</p><details class="custom-container details"><summary>\u4EE3\u7801\u7247\u6BB5</summary><ul><li>Dao\u5C42</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>    <span class="token doc-comment comment">/**
     * \u901A\u7528\u6761\u4EF6\u5217\u8868
     *
     * <span class="token keyword">@param</span>      <span class="token parameter">$param</span>
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">null</span></span> <span class="token parameter">$page</span>
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">null</span></span> <span class="token parameter">$limit</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">mixed</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getList</span> <span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">,</span> <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token variable">$limit</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_buildQueryString</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_buildOrder</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">,</span> <span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_buildPageLimit</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">,</span> <span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$limit</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u901A\u7528\u6761\u4EF6\u6570\u91CF
     *
     * <span class="token keyword">@param</span> <span class="token parameter">$param</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">int</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getCount</span> <span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_buildQueryString</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

		<span class="token doc-comment comment">/**
     * \u67E5\u8BE2\u6761\u4EF6
     *
     * <span class="token keyword">@param</span> <span class="token parameter">$params</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name">Builder</span>
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">_buildQueryString</span> <span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// CustomUtils::xzxDebug($params);</span>

        <span class="token comment">// \u672C\u8868\u4E00\u5F8B\u547D\u540D\u4E3Amain</span>
        <span class="token variable">$main</span>    <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;%s AS main&quot;</span><span class="token punctuation">,</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">TABLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$receive</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;%s AS receive&quot;</span><span class="token punctuation">,</span> <span class="token class-name static-context">TradeOrderReceiveDao</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// $mch     = sprintf(&#39;%s AS mch&#39;, MchInfoDao::table());</span>

        <span class="token variable">$forceIndex</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;createTime&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;tradeNo&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;transStatus&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;mchNo&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;mchId&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;isSettle&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;isRefund&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;isDis&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;relNo&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;orderNo&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;bondThawSettleTime&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_buildConnectionTable</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token variable">$main</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">fromRaw</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$main</span><span class="token punctuation">}</span></span> force index(&quot;</span><span class="token operator">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$forceIndex</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token variable">$receive</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;receive.tradeNo&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;main.tradeNo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// $builder-&gt;join($mch, &#39;mch.mchNo&#39;, &#39;main.mchNo&#39;);</span>

        <span class="token comment">// \u901A\u8FC7 Arr::exists \u6765\u5224\u65AD\u662F\u5426\u5B58\u5728\u8BE5\u952E, isset\u4E0D\u51C6\u786E</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;mchIdList&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;mchIdList&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">whereIn</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.mchId&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;mchIdList&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;mchId&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;mchId&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.mchId&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;mchId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;mchNo&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;mchNo&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.mchNo&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;mchNo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;tradeNo&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;tradeNo&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.tradeNo&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;tradeNo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;orderNo&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;orderNo&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.orderNo&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;orderNo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;relNo&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;relNo&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.relNo&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;relNo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;mchUrl&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;mchUrl&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.mchUrl&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;like&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;%<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;mchUrl&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;transStatus&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;transStatus&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.transStatus&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;transStatus&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;isSettle&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;isSettle&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.isSettle&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;isSettle&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;isChecked&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;isChecked&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.isChecked&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;isChecked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;isRefund&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;isRefund&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.isRefund&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;isRefund&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;isDis&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;isDis&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.isDis&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;isDis&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;isFrozen&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;isFrozen&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.isFrozen&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;isFrozen&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;isThaw&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;isThaw&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.isThaw&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;isThaw&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;channelId&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;channelId&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.channelId&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;channelId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;createTimeRange&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;createTimeRange&quot;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">whereBetween</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main.createTime&#39;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;createTimeRange&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;mchNoList&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;mchNoList&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">whereIn</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.mchNo&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;mchNoList&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;mchNoNotInList&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;mchNoNotInList&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">whereNotIn</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;main.mchNo&quot;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;mchNoNotInList&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bondThawSettleStatus&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main.bondThawSettleStatus&#39;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;bondThawSettleStatus&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bondThawSettleTimeRange&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">whereBetween</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main.bondThawSettleTime&#39;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;bondThawSettleTimeRange&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;cardType&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;receive.cardType&#39;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;cardType&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bankBillUrl&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;receive.bankBillUrl&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;like&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;%<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;bankBillUrl&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;cardNo64&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;receive.cardNo&#39;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;cardNo64&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;cardNoHash&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token variable">$cardNoHash</span> <span class="token operator">=</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;cardNoHash&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$cardNoHash</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$cardNoHash</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token variable">$cardNoHash</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$cardNoHash</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">whereIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;receive.cardNoHash&#39;</span><span class="token punctuation">,</span> <span class="token variable">$cardNoHash</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bankType&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token variable">$bank</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;%s AS bank&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">BankInfoDao</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token variable">$bank</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bank.id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;main.bankId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;bank.type&#39;</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;bankType&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">selectRaw</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;main.*&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;receive.cardType&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;receive.cardNo&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;receive.cardNoHash&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;receive.cardEmail&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;receive.cardCountry&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;receive.bankBillUrl&#39;</span><span class="token punctuation">,</span>
            <span class="token comment">// &#39;mch.mchName&#39;,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token variable">$builder</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Service\u5C42\u8C03\u7528</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$total</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">TradeOrderDetailDao</span><span class="token operator">-&gt;</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$list</span>  <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">TradeOrderDetailDao</span><span class="token operator">-&gt;</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">,</span> <span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$limit</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></details><p>\u8FD9\u662F\u6700\u65E9\u8BBE\u8BA1\u7684Dao\u901A\u7528\u67E5\u8BE2\uFF0C\u5176\u8BBE\u8BA1\u521D\u8877\u4E5F\u662F\u590D\u7528\u67E5\u8BE2\u4EE3\u7801\u3002</p><p>\u8D77\u521D\u4E1A\u52A1\u7B80\u5355\u7684\u65F6\u5019\uFF0C\u8FD9\u8FD8\u662F\u4E00\u4E2A\u633A\u597D\u7528\u7684\u8BBE\u8BA1\uFF0C\u5404\u79CD\u67E5\u8BE2\u6761\u4EF6\u590D\u5236\u7C98\u8D34\u6539\u4E00\u6539\u5C31\u641E\u5B9A\u4E86\u3002</p><p><strong>\u540E\u6765\uFF0C\u67E5\u8BE2\u6761\u4EF6\u8D8A\u6765\u8D8A\u591A\u3001\u8D8A\u6765\u8D8A\u591A\u6837\u5316\uFF0C\u8C03\u7528\u8FD9\u4E2A\u67E5\u8BE2\u529F\u80FD\u7684\u4E1A\u52A1\u4E5F\u8D8A\u6765\u8D8A\u591A\uFF0C\u56E0\u6B64\u5BFC\u81F4\u8FD9\u90E8\u5206\u4EE3\u7801\u8D8A\u6765\u8D8A\u81C3\u80BF\u3002</strong></p><p>\u5E76\u4E14A\u4E1A\u52A1\u9700\u8981\u4FEE\u6539\u67E5\u8BE2\u903B\u8F91\uFF0C\u5C31\u6709\u5F71\u54CD\u5230\u540C\u6837\u8C03\u7528\u8FD9\u90E8\u5206\u67E5\u8BE2\u903B\u8F91\u7684B\u4E1A\u52A1\u7684\u53EF\u80FD\u6027\uFF0C\u56E0\u4E3A\u8FD9\u79CD\u590D\u7528\uFF0C\u628A\u4ED6\u4EEC\u8026\u5408\u5728\u4E00\u8D77\u4E86\u3002</p><p><strong>\u8FD9\u79CD\u4EE3\u7801\u76EE\u524D\u5728\u6211\u4EEC\u7684\u9879\u76EE\u4E2D\u5927\u91CF\u5B58\u5728\u7740\uFF0C\u6240\u4EE5\u65E7\u7684\u5C31\u4E0D\u8981\u7BA1\u4E86\uFF0C\u65B0\u7684\u5C31\u5C3D\u91CF\u4E0D\u8981\u518D\u7528\u8FD9\u79CD\u65B9\u6CD5\u3002</strong></p>`,14),e=[o];function c(l,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","dao.html.vue"]]);export{r as default};
